name: Release
on:
  workflow_dispatch:
defaults:
  run:
    shell: bash
jobs:
  vars:
    runs-on: ubuntu-22.04
    outputs:
      release-version: ${{ steps.vars.outputs.release-version }}
      release-tag: ${{ steps.vars.outputs.release-version }}
    steps:
      - id: vars
        run: |
          echo "release-version=$(cat version.txt)" >> "${GITHUB_OUTPUT}"

  build:
    uses: ./.github/workflows/build.yaml

  create-github-release-draft:
    needs:
      - build
      - vars
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up signing
        uses: ./.github/workflows/setup-sign
        with:
          pgp-key-id: ${{ vars.PGP_KEY_ID }}
          pgp-key-passphrase: ${{ secrets.PGP_KEY_PASSPHRASE }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-email: ${{ vars.GIT_USER_EMAIL }}
          git-user-name: ${{ vars.GIT_USER_NAME }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create checksum file
        run: |
          sha256sum * > SHA256SUMS
          gpg --batch --pinentry-mode loopback --detach-sign --armor SHA256SUMS
        working-directory: dist

      - name: List artifacts
        run: find dist/ || exit 1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-checksums
          path: |
            dist/*.asc
            dist/*SUMS
          retention-days: 1
          if-no-files-found: error

  publish-github-release:
    needs:
      - create-github-release-draft
      - vars
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: vars
        run: |
          echo "release-tag=$(cat version.txt)" >> "${GITHUB_OUTPUT}"

      - name: Set up signing
        uses: ./.github/workflows/setup-sign
        with:
          pgp-key-id: ${{ vars.PGP_KEY_ID }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-email: ${{ vars.GIT_USER_EMAIL }}
          git-user-name: ${{ vars.GIT_USER_NAME }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: List artifacts
        run: find dist/ || exit 1

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ needs.vars.outputs.release-tag }}
        run: gh release create --draft "${RELEASE_TAG}" dist/* || exit 1

  tag-release:
    needs:
      - publish-github-release
      - vars
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up signing
        uses: ./.github/workflows/setup-sign
        with:
          pgp-key-id: ${{ vars.PGP_KEY_ID }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-email: ${{ vars.GIT_USER_EMAIL }}
          git-user-name: ${{ vars.GIT_USER_NAME }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: List artifacts
        run: find dist/ || exit 1

      - name: Tag release
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_VERSION: ${{ needs.vars.outputs.release-version }}
          RELEASE_TAG: ${{ needs.vars.outputs.release-tag }}
        run: |
          git tag --sign --message "Release ${RELEASE_VERSION}" "${RELEASE_TAG}"
          git push origin "${RELEASE_TAG}"
