name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - 'release/*'
defaults:
  run:
    shell: bash
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  vars:
    runs-on: ubuntu-22.04
    outputs:
      release-tag: ${{ steps.vars.outputs.release-version }}
      release-version: ${{ steps.vars.outputs.release-version }}
      run-id: ${{ steps.vars.outputs.run-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: vars
        run: |
          echo "release-tag=$(cat version.txt)" >> "${GITHUB_OUTPUT}"
          echo "release-version=$(cat version.txt)" >> "${GITHUB_OUTPUT}"
          echo "run-id=${{ github.run_id }}_${{ github.run_number }}_${{ github.run_attempt }}" >> "${GITHUB_OUTPUT}"

  build:
    uses: ./.github/workflows/build-baseline.yaml

  create-github-release-draft:
    needs:
      - build
      - vars
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist_files_${{ needs.vars.outputs.run-id }}
          path: dist

      - name: Set up signing
        uses: ./.github/actions/setup-sign
        with:
          pgp-key-id: ${{ vars.PGP_KEY_ID }}
          pgp-key-passphrase: ${{ secrets.PGP_KEY_PASSPHRASE }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-email: ${{ vars.GIT_USER_EMAIL }}
          git-user-name: ${{ vars.GIT_USER_NAME }}

      - name: Sign artifacts
        uses: ./.github/actions/sign-artifacts
        with:
          directory: dist

      - name: List artifacts
        run: find dist/

      - name: Upload signature artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist_signatures_${{ needs.vars.outputs.run-id }}
          path: |
            dist/*.asc
            dist/*SUMS
          retention-days: 1
          if-no-files-found: error

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ needs.vars.outputs.release-tag }}
        run: gh release create --draft "${RELEASE_TAG}" dist/*

  tag-release:
    needs:
      - create-github-release-draft
      - vars
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up signing
        uses: ./.github/actions/setup-sign
        with:
          pgp-key-id: ${{ vars.PGP_KEY_ID }}
          pgp-key-passphrase: ${{ secrets.PGP_KEY_PASSPHRASE }}
          pgp-private-key: ${{ secrets.PGP_PRIVATE_KEY }}
          git-user-email: ${{ vars.GIT_USER_EMAIL }}
          git-user-name: ${{ vars.GIT_USER_NAME }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist_*_${{ needs.vars.outputs.run-id }}
          path: dist

      - name: List artifacts
        run: find dist/

      - name: Tag release
        env:
          RELEASE_VERSION: ${{ needs.vars.outputs.release-version }}
          RELEASE_TAG: ${{ needs.vars.outputs.release-tag }}
        run: |
          git tag --sign --message "Release ${RELEASE_VERSION}" "${RELEASE_TAG}"
          git push origin "${RELEASE_TAG}"

      - name: Publish release
        env:
          GH_TOKEN: ${{ github.token }}
          RELEASE_TAG: ${{ needs.vars.outputs.release-tag }}
        run: gh release edit --verify-tag --draft=false "${RELEASE_TAG}"

  cleanup-deployments:
    if: always()
    needs:
      - tag-release
    runs-on: ubuntu-22.04
    permissions:
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete deployments
        uses: ./.github/actions/delete-deployments

  cleanup-branch:
    if: always()
    needs:
      - tag-release
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Delete release branch
        if: success() && startsWith(github.ref_name, 'release/')
        env:
          REF: ${{ github.ref_name }}
        run: git push origin ":${REF}"
